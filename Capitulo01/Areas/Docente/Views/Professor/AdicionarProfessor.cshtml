@model Capitulo01.Areas.Docente.Models.AdicionarProfessorViewModel

@{
    ViewData["Title"] = "Adicionar Professor ao Curso";
    Layout = "_LayoutIES";
}

@if (ViewBag.Mensagem != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <div class="d-flex align-items-center">
            <i class="fas fa-check-circle fa-2x text-success me-3"></i>
            <div>
                <h5 class="alert-heading">Sucesso!</h5>
                <p class="mb-0">@ViewBag.Mensagem</p>
            </div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm">
    <div class="card-header text-white bg-primary text-center py-3">
        <h1 class="mb-0">
            <i class="fas fa-user-plus me-2"></i>
            Adicionar Professor ao Curso
        </h1>
    </div>

    <div class="card-body">
        <form asp-action="AdicionarProfessor" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="row">
                <div class="col-md-8 offset-md-2">

                    <div class="alert alert-info border-info mb-4" role="alert">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-info-circle fa-2x text-info me-3"></i>
                            <div>
                                <h6 class="alert-heading mb-1">Como funciona:</h6>
                                <small class="mb-0">Selecione sequencialmente: Instituição → Departamento → Curso → Professor disponível</small>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mb-4">
                        <label asp-for="InstituicaoID" class="form-label fw-bold">
                            <i class="fas fa-university text-primary me-2"></i>
                            Instituição:
                        </label>
                        <select asp-for="InstituicaoID" class="form-control form-select-lg" id="ddlInstituicao">
                            <option value="0">Selecione a instituição</option>
                            @if (ViewBag.Instituicoes != null)
                            {
                                @foreach (var instituicao in ViewBag.Instituicoes as List<Capitulo01.Modelo.Cadastros.Instituicao>)
                                {
                                    if (instituicao.InstituicaoID != 0)
                                    {
                                        <option value="@instituicao.InstituicaoID">@instituicao.Nome</option>
                                    }
                                }
                            }
                        </select>
                        <span asp-validation-for="InstituicaoID" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-4">
                        <label asp-for="DepartamentoID" class="form-label fw-bold">
                            <i class="fas fa-building text-warning me-2"></i>
                            Departamento:
                        </label>
                        <select asp-for="DepartamentoID" class="form-control form-select-lg" id="ddlDepartamento">
                            <option value="0">Primeiro selecione uma instituição</option>
                        </select>
                        <span asp-validation-for="DepartamentoID" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-4">
                        <label asp-for="CursoID" class="form-label fw-bold">
                            <i class="fas fa-graduation-cap text-success me-2"></i>
                            Curso:
                        </label>
                        <select asp-for="CursoID" class="form-control form-select-lg" id="ddlCurso">
                            <option value="0">Primeiro selecione um departamento</option>
                        </select>
                        <span asp-validation-for="CursoID" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-4">
                        <label asp-for="ProfessorID" class="form-label fw-bold">
                            <i class="fas fa-chalkboard-teacher text-info me-2"></i>
                            Professor Disponível:
                        </label>
                        <select asp-for="ProfessorID" class="form-control form-select-lg" id="ddlProfessor">
                            <option value="0">Primeiro selecione um curso</option>
                        </select>
                        <span asp-validation-for="ProfessorID" class="text-danger"></span>
                        <div class="form-text">
                            <i class="fas fa-lightbulb text-warning"></i>
                            <small>Apenas professores que ainda não estão neste curso aparecerão na lista</small>
                        </div>
                    </div>

                    <hr class="my-4">

                    <div class="d-grid gap-2 d-md-flex justify-content-md-center">
                        <button type="submit" class="btn btn-success btn-lg me-md-2" id="btnSubmit">
                            <i class="fas fa-save"></i> Registrar Professor no Curso
                        </button>
                        <a asp-action="VerificarUltimosRegistros" class="btn btn-info btn-lg me-md-2">
                            <i class="fas fa-history"></i> Ver Últimos Registros
                        </a>
                        <a asp-action="Index" class="btn btn-secondary btn-lg">
                            <i class="fas fa-arrow-left"></i> Voltar à Lista
                        </a>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="card-footer bg-light text-center text-muted">
        <small>
            <i class="fas fa-info-circle"></i>
            Siga a sequência de seleção para associar um professor disponível ao curso desejado
        </small>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            console.log("Sistema de cascata carregado");

            function verificarFormularioCompleto() {
                var instituicao = $("#ddlInstituicao").val();
                var departamento = $("#ddlDepartamento").val();
                var curso = $("#ddlCurso").val();
                var professor = $("#ddlProfessor").val();

                var completo = instituicao && instituicao != "0" &&
                               departamento && departamento != "0" &&
                               curso && curso != "0" &&
                               professor && professor != "0";

                $("#btnSubmit").prop('disabled', !completo);
            }

            $("#ddlInstituicao").change(function () {
                var instituicaoID = $(this).val();
                console.log("Instituição selecionada:", instituicaoID);

                $("#ddlDepartamento").empty().append('<option value="0">Carregando...</option>').prop('disabled', false);
                $("#ddlCurso").empty().append('<option value="0">Aguarde seleção do departamento</option>').prop('disabled', true);
                $("#ddlProfessor").empty().append('<option value="0">Aguarde seleção do curso</option>').prop('disabled', true);

                verificarFormularioCompleto();

                if (instituicaoID && instituicaoID != "0") {
                    carregarDepartamentos(instituicaoID);
                } else {
                    $("#ddlDepartamento").empty().append('<option value="0">Primeiro selecione uma instituição</option>').prop('disabled', true);
                    $("#ddlCurso").empty().append('<option value="0">Primeiro selecione um departamento</option>').prop('disabled', true);
                    $("#ddlProfessor").empty().append('<option value="0">Primeiro selecione um curso</option>').prop('disabled', true);
                }
            });

            $("#ddlDepartamento").change(function () {
                var departamentoID = $(this).val();
                console.log("Departamento selecionado:", departamentoID);

                $("#ddlCurso").empty().append('<option value="0">Carregando...</option>').prop('disabled', false);
                $("#ddlProfessor").empty().append('<option value="0">Aguarde seleção do curso</option>').prop('disabled', true);

                verificarFormularioCompleto();

                if (departamentoID && departamentoID != "0") {
                    carregarCursos(departamentoID);
                } else {
                    $("#ddlCurso").empty().append('<option value="0">Primeiro selecione um departamento</option>').prop('disabled', true);
                    $("#ddlProfessor").empty().append('<option value="0">Primeiro selecione um curso</option>').prop('disabled', true);
                }
            });

            $("#ddlCurso").change(function () {
                var cursoID = $(this).val();
                console.log("Curso selecionado:", cursoID);

                $("#ddlProfessor").empty().append('<option value="0">Carregando...</option>').prop('disabled', false);

                verificarFormularioCompleto();

                if (cursoID && cursoID != "0") {
                    carregarProfessores(cursoID);
                } else {
                    $("#ddlProfessor").empty().append('<option value="0">Primeiro selecione um curso</option>').prop('disabled', true);
                }
            });

            $("#ddlProfessor").change(function () {
                verificarFormularioCompleto();
            });

            function carregarDepartamentos(instituicaoID) {
                $.ajax({
                    url: '@Url.Action("ObterDepartamentosPorInstituicao", "Professor", new { area = "Docente" })',
                    type: 'GET',
                    data: { actionID: instituicaoID },
                    success: function (data) {
                        console.log("Departamentos recebidos:", data);

                        $("#ddlDepartamento").empty().append('<option value="0">Selecione o departamento</option>');

                        if (data && data.length > 0) {
                            $.each(data, function (index, item) {
                                $("#ddlDepartamento").append('<option value="' + item.value + '">' + item.text + '</option>');
                            });
                        } else {
                            $("#ddlDepartamento").append('<option value="0">Nenhum departamento encontrado</option>');
                        }

                        verificarFormularioCompleto();
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao carregar departamentos:", error);
                        $("#ddlDepartamento").empty().append('<option value="0">Erro ao carregar departamentos</option>');
                        alert("Erro ao carregar departamentos.");
                    }
                });
            }

            function carregarCursos(departamentoID) {
                $.ajax({
                    url: '@Url.Action("ObterCursosPorDepartamento", "Professor", new { area = "Docente" })',
                    type: 'GET',
                    data: { actionID: departamentoID },
                    success: function (data) {
                        console.log("Cursos recebidos:", data);

                        $("#ddlCurso").empty().append('<option value="0">Selecione o curso</option>');

                        if (data && data.length > 0) {
                            $.each(data, function (index, item) {
                                $("#ddlCurso").append('<option value="' + item.value + '">' + item.text + '</option>');
                            });
                        } else {
                            $("#ddlCurso").append('<option value="0">Nenhum curso encontrado</option>');
                        }

                        verificarFormularioCompleto();
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao carregar cursos:", error);
                        $("#ddlCurso").empty().append('<option value="0">Erro ao carregar cursos</option>');
                        alert("Erro ao carregar cursos.");
                    }
                });
            }

            function carregarProfessores(cursoID) {
                $.ajax({
                    url: '@Url.Action("ObterProfessoresForaDoCurso", "Professor", new { area = "Docente" })',
                    type: 'GET',
                    data: { actionID: cursoID },
                    success: function (data) {
                        console.log("Professores recebidos:", data);

                        $("#ddlProfessor").empty().append('<option value="0">Selecione o professor</option>');

                        if (data && data.length > 0) {
                            $.each(data, function (index, item) {
                                $("#ddlProfessor").append('<option value="' + item.value + '">' + item.text + '</option>');
                            });
                        } else {
                            $("#ddlProfessor").append('<option value="0">Todos os professores já estão neste curso</option>');
                        }

                        verificarFormularioCompleto();
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao carregar professores:", error);
                        $("#ddlProfessor").empty().append('<option value="0">Erro ao carregar professores</option>');
                        alert("Erro ao carregar professores.");
                    }
                });
            }

            verificarFormularioCompleto();
        });
    </script>
}